===================================================================================================================================

Assignment 1

======================================================================================================================================

Create the employee.json file with the following data:


[    {        "name": "John Doe",        "dob": "01/01/1990",        "height": "5'11",        "city": "New York",        "state": "New York"    },    {        "name": "Jane Doe",        "dob": "02/01/1990",        "height": "5'6",        "city": "Los Angeles",        "state": "California"    },    {        "name": "Bob Smith",        "dob": "03/01/1991",        "height": "6'0",        "city": "Chicago",        "state": "Illinois"    },    {        "name": "Alice Johnson",        "dob": "04/01/1991",        "height": "5'5",        "city": "Houston",        "state": "Texas"    },    {        "name": "Charlie Brown",        "dob": "05/01/1992",        "height": "5'9",        "city": "Phoenix",        "state": "Arizona"    }]

----------------------------------------------------------------

Then import this code:

------------------------------------------------------------------

import json

# Employee Class
class Employee:
    def __init__(self, name, dob, height, city, state):
        self.name = name
        self.dob = dob
        self.height = height
        self.city = city
        self.state = state

    def __str__(self):
        return f"Name: {self.name}\nDOB: {self.dob}\nHeight: {self.height}\nCity: {self.city}\nState: {self.state}"

# Reading data from employee.json file and creating Employee objects
with open("employee.json", "r") as file:
    employees_data = json.load(file)

employees = []
for employee_data in employees_data:
    employee = Employee(employee_data["name"], employee_data["dob"], employee_data["height"], employee_data["city"], employee_data["state"])
    employees.append(employee)

# Printing the list of Employee objects
for employee in employees:
    print(employee)

# Writing dictionary data to states_and_capitals.json file
states_and_capitals = {
    "Andhra Pradesh": "Amaravati",
    "Arunachal Pradesh": "Itanagar",
    "Assam": "Dispur",
    "Bihar": "Patna",
    "Chhattisgarh": "Raipur",
    "Goa": "Panaji",
    "Gujarat": "Gandhinagar"
}

with open("states_and_capitals.json", "w") as file:
    json.dump(states_and_capitals, file)

======================================================================================================================================================================

Assignment 2

=========================================================================================================================================================================


class Dog:
    def __init__(self, name, age, coat_color):
        self.name = name
        self.age = age
        self.coat_color = coat_color

    def description(self):
        print("Name: ", self.name)
        print("Age: ", self.age)

    def get_info(self):
        print("Coat Color: ", self.coat_color)

class JackRussellTerrier(Dog):
    def __init__(self, name, age, coat_color, breed_type, energy_level):
        super().__init__(name, age, coat_color)
        self.breed_type = breed_type
        self.energy_level = energy_level

    def breed_info(self):
        print("Breed Type: ", self.breed_type)

    def energy(self):
        print("Energy Level: ", self.energy_level)

class Bulldog(Dog):
    def __init__(self, name, age, coat_color, muscle_mass, personality):
        super().__init__(name, age, coat_color)
        self.muscle_mass = muscle_mass
        self.personality = personality

    def muscle(self):
        print("Muscle Mass: ", self.muscle_mass)

    def character(self):
        print("Personality: ", self.personality)

dog1 = JackRussellTerrier("Max", 5, "White", "Terrier", "Energetic")
dog2 = Bulldog("Rocky", 7, "Brown", "Strong", "Friendly")

print("\nJackRussellTerrier:")
dog1.description()
dog1.get_info()
dog1.breed_info()
dog1.energy()

print("\nBulldog:")
dog2.description()
dog2.get_info()
dog2.muscle()
dog2.character()

===================================================================================


    
